{
	"name": "FlowCatalogueToSQL",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSVCatalogue",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "OutputCatalogue",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputCatalogue",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DeleteOtherColumn"
				},
				{
					"name": "Select1"
				},
				{
					"name": "ExcludeExtrenalRefNULL"
				},
				{
					"name": "filter1"
				},
				{
					"name": "AddSinatureNew"
				},
				{
					"name": "AddSignatureOld"
				},
				{
					"name": "exists1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Filename as string",
				"}",
				"source(output(",
				"          {Internal reference} as string,",
				"          {External reference} as string,",
				"          Name as string,",
				"          Description as string,",
				"          {Content Type} as string,",
				"          {Display type} as string,",
				"          {Created on} as string,",
				"          Priority as string,",
				"          {Enrolment mode} as string,",
				"          {Enrolment count} as string,",
				"          {CPD learning hours} as string,",
				"          {CPD points} as string,",
				"          {Access count} as string,",
				"          {Rating mean} as string,",
				"          {Rating count} as string,",
				"          {Visibility:phone} as string,",
				"          {Visibility:tablet} as string,",
				"          {Visibility:portal} as string,",
				"          Category18 as string,",
				"          Category19 as string,",
				"          Category20 as string,",
				"          Category21 as string,",
				"          Category22 as string,",
				"          Category23 as string,",
				"          Category24 as string,",
				"          Category25 as string,",
				"          Category26 as string,",
				"          Category27 as string,",
				"          Category28 as string,",
				"          Category29 as string,",
				"          Category30 as string,",
				"          Category31 as string,",
				"          Category32 as string,",
				"          Category33 as string,",
				"          Category34 as string,",
				"          Category35 as string,",
				"          Category36 as string,",
				"          Category37 as string,",
				"          Category38 as string,",
				"          Category39 as string,",
				"          Category40 as string,",
				"          Category41 as string,",
				"          Category42 as string,",
				"          Category43 as string,",
				"          Category44 as string,",
				"          Category45 as string,",
				"          Category46 as string,",
				"          Category47 as string,",
				"          Category48 as string,",
				"          Category49 as string,",
				"          Category50 as string,",
				"          Category51 as string,",
				"          Category52 as string,",
				"          Category53 as string,",
				"          Category54 as string,",
				"          Category55 as string,",
				"          Category56 as string,",
				"          Category57 as string,",
				"          Category58 as string,",
				"          Category59 as string,",
				"          Category60 as string,",
				"          Category61 as string,",
				"          Category62 as string,",
				"          Category63 as string,",
				"          Category64 as string,",
				"          Category65 as string,",
				"          Category66 as string,",
				"          Category67 as string,",
				"          Category68 as string,",
				"          Category69 as string,",
				"          Category70 as string,",
				"          Category71 as string,",
				"          Category72 as string,",
				"          Category73 as string,",
				"          Category74 as string,",
				"          Category75 as string,",
				"          Category76 as string,",
				"          Category77 as string,",
				"          Category78 as string,",
				"          Category79 as string,",
				"          Category80 as string,",
				"          Category81 as string,",
				"          Category82 as string,",
				"          Category83 as string,",
				"          Category84 as string,",
				"          Category85 as string,",
				"          Category86 as string,",
				"          Category87 as string,",
				"          Category88 as string,",
				"          Category89 as string,",
				"          Category90 as string,",
				"          Category91 as string,",
				"          Category92 as string,",
				"          Category93 as string,",
				"          Category94 as string,",
				"          Category95 as string,",
				"          Category96 as string,",
				"          Category97 as string,",
				"          Category98 as string,",
				"          Category99 as string,",
				"          Category100 as string,",
				"          Category101 as string,",
				"          Category102 as string,",
				"          Category103 as string,",
				"          Category104 as string,",
				"          Category105 as string,",
				"          Category106 as string,",
				"          Category107 as string,",
				"          Category108 as string,",
				"          Category109 as string,",
				"          Category110 as string,",
				"          Category111 as string,",
				"          Category112 as string,",
				"          Category113 as string,",
				"          Category114 as string,",
				"          Category115 as string,",
				"          Category116 as string,",
				"          Category117 as string,",
				"          Category118 as string,",
				"          Category119 as string,",
				"          Category120 as string,",
				"          Category121 as string,",
				"          Category122 as string,",
				"          Category123 as string,",
				"          Category124 as string,",
				"          Category125 as string,",
				"          Category126 as string,",
				"          Category127 as string,",
				"          Category128 as string,",
				"          Category129 as string,",
				"          Category130 as string,",
				"          Category131 as string,",
				"          Category132 as string,",
				"          Category133 as string,",
				"          Category134 as string,",
				"          Category135 as string,",
				"          Category136 as string,",
				"          Category137 as string,",
				"          Category138 as string,",
				"          Category139 as string,",
				"          Category140 as string,",
				"          Category141 as string,",
				"          Category142 as string,",
				"          Category143 as string,",
				"          Category144 as string,",
				"          Category145 as string,",
				"          Category146 as string,",
				"          Category147 as string,",
				"          {Catalogue:group148} as string,",
				"          {Catalogue:group149} as string,",
				"          {Catalogue:group150} as string,",
				"          {Catalogue:group151} as string,",
				"          {Catalogue:group152} as string,",
				"          {Catalogue:group153} as string,",
				"          {Catalogue:group154} as string,",
				"          {Catalogue:group155} as string,",
				"          {My learning:group156} as string,",
				"          {My learning:group157} as string,",
				"          {My learning:group158} as string,",
				"          {My learning:group159} as string,",
				"          {My learning:group160} as string,",
				"          {My learning:group161} as string,",
				"          {My learning:group162} as string,",
				"          {My learning:group163} as string,",
				"          {My learning:group164} as string,",
				"          {My learning:group165} as string,",
				"          {Catalogue:ou:business unit description (english)166} as string,",
				"          {Catalogue:ou:business unit description (english)167} as string,",
				"          {Catalogue:ou:business unit description (english)168} as string,",
				"          {Catalogue:ou:business unit description (english)169} as string,",
				"          {Catalogue:ou:business unit description (english)170} as string,",
				"          {Catalogue:ou:business unit description (english)171} as string,",
				"          {Catalogue:ou:business unit description (english)172} as string,",
				"          {Catalogue:ou:business unit description (english)173} as string,",
				"          {Catalogue:ou:business unit description (english)174} as string,",
				"          {Catalogue:ou:business unit description (english)175} as string,",
				"          {Catalogue:ou:business unit description (english)176} as string,",
				"          {Catalogue:ou:business unit description (english)177} as string,",
				"          {Catalogue:ou:business unit description (english)178} as string,",
				"          {Catalogue:ou:business unit description (english)179} as string,",
				"          {Catalogue:ou:business unit description (english)180} as string,",
				"          {Catalogue:ou:business unit description (english)181} as string,",
				"          {Catalogue:ou:business unit description (english)182} as string,",
				"          {Catalogue:ou:business unit description (english)183} as string,",
				"          {Catalogue:ou:business unit description (english)184} as string,",
				"          {Catalogue:ou:business unit description (english)185} as string,",
				"          {Catalogue:ou:business unit description (english)186} as string,",
				"          {Catalogue:ou:business unit description (english)187} as string,",
				"          {Catalogue:ou:business unit description (english)188} as string,",
				"          {Catalogue:ou:business unit description (english)189} as string,",
				"          {Catalogue:ou:business unit description (english)190} as string,",
				"          {Catalogue:ou:business unit description (english)191} as string,",
				"          {Catalogue:ou:business unit description (english)192} as string,",
				"          {Catalogue:ou:business unit description (local)193} as string,",
				"          {Catalogue:ou:business unit description (local)194} as string,",
				"          {Catalogue:ou:business unit description (local)195} as string,",
				"          {Catalogue:ou:business unit description (local)196} as string,",
				"          {My learning:ou:business unit description (english)197} as string,",
				"          {My learning:ou:business unit description (english)198} as string,",
				"          {My learning:ou:business unit description (english)199} as string,",
				"          {My learning:ou:business unit description (english)200} as string,",
				"          {My learning:ou:business unit description (english)201} as string,",
				"          {My learning:ou:business unit description (english)202} as string,",
				"          {My learning:ou:business unit description (english)203} as string,",
				"          {My learning:ou:business unit description (english)204} as string,",
				"          {My learning:ou:business unit description (english)205} as string,",
				"          {My learning:ou:business unit description (english)206} as string,",
				"          {My learning:ou:business unit description (english)207} as string,",
				"          {My learning:ou:business unit description (english)208} as string,",
				"          {My learning:ou:business unit description (local)} as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     multiLineRow: true) ~> source1",
				"source(output(",
				"          {Internal reference} as string,",
				"          {External reference} as string,",
				"          Name as string,",
				"          Description as string,",
				"          {Content Type} as string,",
				"          {Display type} as string,",
				"          {Created on} as string,",
				"          Priority as string,",
				"          {Enrolment mode} as string,",
				"          {Enrolment count} as string,",
				"          {CPD learning hours} as string,",
				"          {CPD points} as string,",
				"          {Access count} as string,",
				"          {Rating mean} as string,",
				"          {Rating count} as string,",
				"          UpdateDate as string,",
				"          FromFile as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     multiLineRow: true) ~> source2",
				"source1 select(mapColumn(",
				"          each(match(name=='Internal reference'||name=='External reference'||name=='Name'||name=='Description'||name=='Content Type'||name=='Display type'||name=='Created on'||name=='Priority'||name=='Created on'||name=='Priority'||name=='Enrolment mode'||name=='Enrolment count'||name=='CPD learning hours'||name=='CPD points'||name=='Access count'||name=='Rating mean'||name=='Rating count'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeleteOtherColumn",
				"source2 select(mapColumn(",
				"          each(match(name=='Internal reference'||name=='External reference'||name=='Name'||name=='Description'||name=='Description'||name=='Content Type'||name=='Display type'||name=='Created on'||name=='Priority'||name=='Created on'||name=='Priority'||name=='Enrolment mode'||name=='Enrolment count'||name=='CPD learning hours'||name=='CPD points'||name=='Access count'||name=='Rating mean'||name=='Rating count'||name=='Visibility:phone'||name=='Visibility:tablet'||name=='Visibility:portal'))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select1",
				"DeleteOtherColumn filter(!isNull({External reference})) ~> ExcludeExtrenalRefNULL",
				"Select1 filter(!isNull({External reference})) ~> filter1",
				"ExcludeExtrenalRefNULL derive(SignatureNew = sha2(256,{Internal reference},{External reference},Name,Description,{Content Type},{Display type},{Created on},Priority,{Enrolment mode},{Enrolment count},{CPD learning hours},{CPD points},{Access count},{Rating mean},{Rating count})) ~> AddSinatureNew",
				"filter1 derive(SignatureOld = sha2(256,{Internal reference},{External reference},Name,Description,{Content Type},{Display type},{Created on},Priority,{Enrolment mode},{Enrolment count},{CPD learning hours},{CPD points},{Access count},{Rating mean},{Rating count})) ~> AddSignatureOld",
				"AddSinatureNew, AddSignatureOld exists(SignatureNew == SignatureOld,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 derive(UpdateDate = currentUTC(),",
				"          FromFile = toString($Filename)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Internal reference} as string,",
				"          {External reference} as string,",
				"          Name as string,",
				"          Description as string,",
				"          {Content Type} as string,",
				"          {Display type} as string,",
				"          {Created on} as string,",
				"          Priority as string,",
				"          {Enrolment mode} as string,",
				"          {Enrolment count} as string,",
				"          {CPD learning hours} as string,",
				"          {CPD points} as string,",
				"          {Access count} as string,",
				"          {Rating mean} as string,",
				"          {Rating count} as string,",
				"          UpdateDate as string,",
				"          FromFile as string",
				"     ),",
				"     partitionFileNames:['Catalogue_Temp.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          {Internal reference},",
				"          {External reference},",
				"          Name,",
				"          Description,",
				"          {Content Type},",
				"          {Display type},",
				"          {Created on},",
				"          Priority,",
				"          {Enrolment mode},",
				"          {Enrolment count},",
				"          {CPD learning hours},",
				"          {CPD points},",
				"          {Access count},",
				"          {Rating mean},",
				"          {Rating count},",
				"          UpdateDate,",
				"          FromFile",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}